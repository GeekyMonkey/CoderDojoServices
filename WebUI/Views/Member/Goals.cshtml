@model Member
@{
    Member member = Model;
    ViewBag.Title = "Goals";
    ViewBag.MenuActive = "Goals";
    List<Belt> belts = ViewBag.Belts;
    List<MemberBelt> MemberBelts = member.MemberBelts.Where(mb => mb.Awarded != null).OrderBy(mb => mb.Belt.SortOrder).ToList();
    List<MemberBelt> MemberBeltsPending = member.MemberBelts.Where(mb => mb.Awarded == null && mb.RejectedDate == null).OrderBy(mb => mb.Belt.SortOrder).ToList();
    List<Guid> BeltsEarnedIds = MemberBelts.Select(mb => mb.BeltId).ToList();
    List<Guid> BeltsPendingIds = MemberBeltsPending.Select(mb => mb.BeltId).ToList();
    List<Belt> BeltsNotEarned = belts.Where(b => BeltsEarnedIds.Contains(b.Id) == false).ToList();
    Belt NextBelt = BeltsNotEarned.FirstOrDefault();
}

@section HeaderLeft
{
}

@section HeaderRight
{
}

@section Footer
{
    <a data-role="button" data-icon="check" class="FormSave">Save</a>
}

@section Panels
{
    @Html.Partial("_MemberMenu")
}


<div data-role="content">
    <form role="controlgroup" action="ProfileSave" method="post">
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.XboxGamertag)
        @Html.HiddenFor(m => m.Login)
        @Html.HiddenFor(m => m.GithubLogin)
        @Html.HiddenFor(m => m.ScratchName)

        <h3>Short Term Goal (2 months)</h3>
        @Html.TextAreaFor(m => m.GoalShortTerm)

        <h3>Long Term Goal (2 years)</h3>
        @Html.TextAreaFor(m => m.GoalLongTerm)

        @if(NextBelt != null) {
            Belt belt = NextBelt;
            MemberBelt beltApplication = null;
            string divclass = "BeltHeader";
            if (BeltsPendingIds.Contains(belt.Id))
            {
                beltApplication = MemberBeltsPending.FirstOrDefault(mb => mb.BeltId == belt.Id);
                divclass += " ApplicationPending";
            }
            <h3>Next Belt</h3>
            <div data-role="collapsible" data-content-theme="a" class="@divclass" data-color="@belt.HexCode">
                <h3>@belt.Color</h3>
                <div data-role="fieldcontain">
                    <p>@Html.Raw(belt.Description.Replace("\r\n", "<br />"))</p>

                    @* Rejections *@
                    @foreach (var rejection in member.MemberBelts
                        .Where(mb => (mb.BeltId == belt.Id) && (mb.RejectedDate != null))
                        .OrderBy(mb => mb.RejectedDate))
                    {
                        <div class="BeltRejection">
                            <p>Rejected on @(rejection.RejectedDate.Value.ToString("dd-MMM-yyyy"))</p>
                            <blockquote>@rejection.RejectedNotes - @rejection.RejectedByAdult.FullName</blockquote>
                        </div>
                    }

                    @* Pending Application *@
                    @if (beltApplication != null)
                    {
                        <p>Application for the <span class="BeltColorText">@(belt.Color.ToLower()) belt</span> was submitted on @(beltApplication.ApplicationDate.Value.ToString("dd-MMM-yyyy")).</p>
                        if (!string.IsNullOrEmpty(beltApplication.ApplicationNotes))
                        {
                            <blockquote>@(beltApplication.ApplicationNotes) - @(beltApplication.Member.MemberName)</blockquote>
                        }
                    }
                </div>
            </div>
        }

    </form>
</div>

<script type="text/javascript">
    $(function () {
        setTimeout(function () {
            // Apply colors
            $(".BeltHeader").each(function (i, e) {
                $(this).find("h3 .ui-btn-inner").css("transition", "background-color 2s");
                $(this).find("h3 .ui-btn-inner").css("background-color", $(this).data("color"));
                $(this).find(".BeltColorText").css("color", $(this).data("color"));
            });

            // Open the first pending one
            $(".ApplicationPending h3").first().trigger("click");
        }, 1000);
    });
</script>
